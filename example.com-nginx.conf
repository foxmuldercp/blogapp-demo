upstream blogapp {
  server 127.0.0.1:3000;
}

server {
  listen 80;
  listen 443 ssl http2;
  listen [::]:80;
  listen [::]:443 ssl http2;

  server_name example.com;

  gzip on;
  gzip_static on;
  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_buffers 16 8k;
  gzip_types text/plain application/javascript application/x-javascript text/javascript text/xml text/css application/json;

# uncomment if you want use SSL (configured later in this file)
#  if ($scheme = http) {
#    rewrite ^ https://$server_name$request_uri permanent;
#  }

# update this location for your frontend application path

  location /img/ {
    root   /opt/blogapp-web/dist;
  }

  location /*.* {
    root   /opt/blogapp-web/dist;
  }

  location / {
    try_files $uri /index.html;
  }

  location /index.html {
    root   /opt/blogapp-web/dist;
  }


  location /bundle.js {
    root   /opt/blogapp-web/dist;
  }

  location /api {
    proxy_set_header        Host $host;
    proxy_set_header        X-Real-IP $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header        X-Forwarded-Proto $scheme;
    proxy_pass_request_headers on;
    proxy_pass_request_body on;
    proxy_cookie_domain     localhost example.com;
    fastcgi_pass_request_headers on;
    proxy_pass              http://blogapp;

#   passenger ruby example config part for demonizing it
#    alias $1;
#    passenger_base_uri /api;
#    passenger_app_root /opt/blogapp-api;
#    passenger_document_root /public;
#    passenger_enabled on;
#    passenger_root /opt/blogapp-api;
#    passenger_ruby /home/user/.rbenv/shims/ruby;
#    rails_env development;
#     passenger_ruby /usr/local/rvm/wrappers/jruby-1.7.1/ruby;

    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' 'https://example.com';
      add_header 'Access-Control-Allow-Credentials' 'true';
      add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, OPTIONS, DELETE';
      add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,auth-token';
      add_header 'Access-Control-Max-Age' 1728000;
      add_header 'Content-Type' 'application/json charset=UTF-8';
      add_header 'Content-Length' 0;
      return 204;
    }
    if ($request_method = 'POST') {
      add_header 'Access-Control-Allow-Origin' 'https://example.com';
      add_header 'Access-Control-Allow-Credentials' 'true';
      add_header 'Access-Control-Allow-Methods' 'POST, PUT, OPTIONS, DELETE';
      add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,auth-token';
    }
    if ($request_method = 'GET') {
      add_header 'Access-Control-Allow-Origin' 'https://example.com';
      add_header 'Access-Control-Allow-Credentials' 'true';
      add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
      add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,auth-token';
    }
    access_log /var/log/nginx/example.com-api.access.log;
    error_log  /var/log/nginx/example.com-api.error.log;
  }

  ssl_certificate /opt/le/certs/example.com/fullchain.pem;
  ssl_certificate_key /opt/le/certs/example.com/privkey.pem;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_prefer_server_ciphers on;
  ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
  ssl_session_cache shared:SSL:10m;
  ssl_session_tickets off; # Requires nginx >= 1.5.9
  ssl_stapling on; # Requires nginx >= 1.3.7
  ssl_stapling_verify on; # Requires nginx => 1.3.7
  resolver 172.17.0.1 valid=300s;
  resolver_timeout 5s;
  add_header X-Frame-Options DENY;
  add_header X-Content-Type-Options nosniff;
  ssl_dhparam /etc/nginx/dhparam.pem;
  ssl_session_timeout 24h;
  ssl_ciphers kEECDH+AES128:kEECDH:kEDH:-3DES:kRSA+AES128:kEDH+3DES:DES-CBC3-SHA:!RC4:!aNULL:!eNULL:!MD5:!EXPORT:!LOW:!SEED:!CAMELLIA:!IDEA:!PSK:!SRP:!SSLv2;
  add_header Strict-Transport-Security "max-age=100000; includeSubdomains; preload";
  add_header Content-Security-Policy-Report-Only "default-src https:; script-src https: 'unsafe-eval' 'unsafe-inline'; style-src https: 'unsafe-inline'; img-src https: data:; font-src https: data:; report-uri /csp-report";
  access_log /var/log/nginx/example.com-web.access.log;
  error_log  /var/log/nginx/example.com-web.error.log;
}
